/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/torch_geometric/typing.py:86: UserWarning: An issue occurred while importing 'torch-scatter'. Disabling its usage. Stacktrace: /home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/torch_scatter/_version_cpu.so: undefined symbol: _ZN3c1017RegisterOperatorsD1Ev
  warnings.warn(f"An issue occurred while importing 'torch-scatter'. "
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/huggingface_hub/file_download.py:943: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/transformers/modeling_utils.py:399: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location="cpu")
Some weights of the model checkpoint at StanfordAIMI/RadBERT were not used when initializing BertModel: ['cls.predictions.transform.dense.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.bias', 'cls.predictions.decoder.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA A100-SXM4-80GB') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:612: UserWarning: Checkpoint directory ./save_model exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loading `train_dataloader` to estimate number of stepping batches.
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 256 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(

  | Name          | Type               | Params
-----------------------------------------------------
0 | model         | LanGuideMedSeg     | 112 M 
1 | loss_fn       | SegmentationLoss   | 3     
2 | train_metrics | ModuleDict         | 0     
3 | val_metrics   | ModuleDict         | 0     
4 | test_metrics  | ModuleDict         | 0     
5 | dice          | Dice               | 0     
6 | ppv           | BinaryPrecision    | 0     
7 | iou           | BinaryJaccardIndex | 0     
8 | acc           | BinaryAccuracy     | 0     
9 | dice_fn       | DiceLoss           | 0     
-----------------------------------------------------
25.7 M    Trainable params
86.5 M    Non-trainable params
112 M     Total params
448.667   Total estimated model params size (MB)
SLURM auto-requeueing enabled. Setting signal handlers.
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, val_dataloader 0, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 256 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
<<<<<< reach best val_dice : 0.0253 >>>>>>
/home/s17gmikh/miniconda3/envs/MELD-env/lib/python3.9/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:224: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 256 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
<<<<<< reach best val_dice : 0.2204 >>>>>>
Epoch 0, global step 65: 'val_dice' reached 0.22043 (best 0.22043), saving model to './save_model/medseg_fold1-v2.ckpt' as top 1
Epoch 1, global step 130: 'val_dice' reached 0.28502 (best 0.28502), saving model to './save_model/medseg_fold1-v2.ckpt' as top 1
Epoch 2, global step 195: 'val_dice' reached 0.31297 (best 0.31297), saving model to './save_model/medseg_fold1-v2.ckpt' as top 1
Epoch 3, global step 260: 'val_dice' was not in top 1
Epoch 4, global step 325: 'val_dice' reached 0.34676 (best 0.34676), saving model to './save_model/medseg_fold1-v2.ckpt' as top 1
Epoch 5, global step 390: 'val_dice' was not in top 1
Epoch 6, global step 455: 'val_dice' was not in top 1
Epoch 7, global step 520: 'val_dice' was not in top 1
Epoch 8, global step 585: 'val_dice' was not in top 1
Epoch 9, global step 650: 'val_dice' was not in top 1
Epoch 10, global step 715: 'val_dice' was not in top 1
Epoch 11, global step 780: 'val_dice' was not in top 1
Epoch 12, global step 845: 'val_dice' was not in top 1
Epoch 13, global step 910: 'val_dice' was not in top 1
Epoch 14, global step 975: 'val_dice' was not in top 1
Epoch 15, global step 1040: 'val_dice' was not in top 1
slurmstepd: error: *** JOB 152073 ON node-06 CANCELLED AT 2025-08-12T15:27:28 ***
